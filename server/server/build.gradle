plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'Gureum_World'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// WEB
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Spring
	implementation group: 'org.springframework.security', name: 'spring-security-messaging', version: '5.6.2'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.jetbrains:annotations:23.0.0'

	compileOnly 'org.projectlombok:lombok:1.18.24'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Spring security
	implementation 'org.springframework.security:spring-security-core'

	// JWT
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	// Redis -> 로그아웃을 요청한 사용자의 토큰을 저장하고 토큰의 만료 시간을 지정하여 사용자가 로그아웃한 시점부터 일정 시간 동안 해당 토큰이 유효하지 않도록 함.
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// OAuth
	implementation 'org.springframework.security:spring-security-oauth2-client'

	// JSON
	implementation 'org.json:json:20231013'
	//spotify api
	implementation 'se.michaelthelin.spotify:spotify-web-api-java:8.0.0'
}
//spotify api
allprojects {
	repositories {
		maven { url 'https://jitpack.io' }
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
